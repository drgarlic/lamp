#!/usr/bin/env bash
#
#   \|/   '||     ^   ||\/| ||''.
#  - o -   ||    //\  ||  | ||--'
#   /|\   .||_| //''\ ||  | ||
#
# Description:              A deamon-less terminal effect manager
# Dependencies:             art, wmctrl, xdpyinfo
# Optionnal dependencies:   none
# Author:                   gawlk
# Contributors:             none

# ---
# TODO
# ---
#
# - More otpions
# - Figure out a way to cache the results
# - Add arguments (-m/-mode)
# - Find a better way to determined which terminal is being focused
# - If the cache is conclusive make a multimode option
# - Mode: increase hue over window change

# ---
# IMPORTS
# ---

. art-api

# ---
# SETUP
# ---

# Disable unicode.
LC_ALL=C
LANG=C

mode=1
cach_file="${cnf_dir}/lamp.cache"

# ---
# LOCAL
# ---

lamp.gen_cach_file() {
    local mode="$mode"
    local theme="$1"
    local brightness="$2"

    local unf_blk="$3"
    local unf_gry="$4"
    local unf_red="$5"
    local unf_grn="$6"
    local unf_blu="$7"
    local unf_wht="$8"

    local fcs_blk="$9"
    local fcs_gry="$10"
    local fcs_red="$11"
    local fcs_grn="$12"
    local fcs_blu="$13"
    local fcs_wht="$14"

    printf '%s\n'   "[global]"                         > "$cach_file"
    printf '%s\n'   "    mode = ${mode}"              >> "$cach_file"
    printf '%s\n'   "    theme = ${theme}"            >> "$cach_file"
    printf '%s\n\n' "    brightness = ${brightness}"  >> "$cach_file"

    printf '%s\n'   "[colors]"                        >> "$cach_file"
    printf '%s\n'   "    unf_blk = ${unf_blk}"        >> "$cach_file"
    printf '%s\n'   "    unf_gry = ${unf_gry}"        >> "$cach_file"
    printf '%s\n'   "    unf_red = ${unf_red}"        >> "$cach_file"
    printf '%s\n'   "    unf_grn = ${unf_grn}"        >> "$cach_file"
    printf '%s\n'   "    unf_blu = ${unf_blu}"        >> "$cach_file"
    printf '%s\n\n' "    unf_wht = ${unf_wht}"        >> "$cach_file"

    printf '%s\n'   "    fcs_blk = ${fcs_blk}"        >> "$cach_file"
    printf '%s\n'   "    fcs_gry = ${fcs_gry}"        >> "$cach_file"
    printf '%s\n'   "    fcs_red = ${fcs_red}"        >> "$cach_file"
    printf '%s\n'   "    fcs_grn = ${fcs_grn}"        >> "$cach_file"
    printf '%s\n'   "    fcs_blu = ${fcs_blu}"        >> "$cach_file"
    printf '%s\n\n' "    fcs_wht = ${fcs_wht}"        >> "$cach_file"
}

lamp.mode1_unfocus_color() {
    local color_in_hsv=( $( converters.hex_to_hsv "$1" ) )
    local V=${color_in_hsv[2]}
    (( V += value ))
    [[ $V -lt 0 ]] && V=0
    [[ $V -gt 1000 ]] && V=1000

    converters.hsv_to_hex "${color_in_hsv[0]}" "${color_in_hsv[1]}" "$V"
}

lamp.mode4_unfocus_color() {
    local color_in_hsv=( $( converters.hex_to_hsv "$1" ) )

    converters.hsv_to_hex "${color_in_hsv[0]}" "0" "${color_in_hsv[2]}"
}

lamp.update_terminals() {
    for term in "/dev/pts/"[0-9]*
    do  
        [[ -w "$term" ]] && [[ "$term" != "$1" ]] && ( printf "%b" "$2" > "$term" & )
    done
}

# ---
# MAIN
# ---

lamp.main() {
    # Get id of the focused window
    local focused_id=$( xdpyinfo | grep -Eo 'window 0x[^,]+' | cut -d" " -f2 | cut -c 3- )

    # Check if the focused window is a terminal
    local focused_dev_pts=$( wmctrl -l | grep "${focused_id}.*/dev/pts/" | awk '{ print $4 }' )

    # If it is a terminal
    if [[ -n "$focused_dev_pts" ]]
    then
        case "$mode" in
            1 )
                # Highlight mode

                local colors=( $( art-api.get_colors ) )
                
                local sequences=$( setters.sequences ${colors[@]} )

                printf "%b" "$sequences" > $focused_dev_pts &

                local brightness=$( art-api.get_brightness )

                # Generate unfosed colors
                local value=200
                local blk="${colors[0]}"
                local gry=$( lamp.mode1_unfocus_color "${colors[1]}" $value "$brightness" )
                local red=$( lamp.mode1_unfocus_color "${colors[2]}" $value "$brightness" )
                local grn=$( lamp.mode1_unfocus_color "${colors[3]}" $value "$brightness" )
                local blu=$( lamp.mode1_unfocus_color "${colors[4]}" $value "$brightness" )
                (( value *= 2 ))
                local wht=$( lamp.mode1_unfocus_color "${colors[5]}" $value "$brightness" )
                
                # Update unfocused terminals
                sequences=$( setters.sequences "$blk" "$gry" "$red" "$grn" "$blu" "$wht" )

                lamp.update_terminals "$focused_dev_pts" "$sequences"
            ;;
            2 )
                # Yin yang mode

                local theme=$( art-api.get_theme )
                local brightness=$( art-api.get_brightness )
                [[ "$brightness" == "dark" ]] && brightness="light" || brightness="dark"

                local colors=( $( art-api.get_colors ) )

                local sequences=$( setters.sequences ${colors[@]} )

                printf "%b" "$sequences" > "$focused_dev_pts" &

                [[ "$brightness" == "dark" ]] && brightness="light" || brightness="dark"
                colors=( $( art-api.get_colors ) )

                sequences=$( setters.sequences ${colors[@]} )

                lamp.update_terminals "$focused_dev_pts" "$sequences"
            ;;
            3 )
                # Stealth mode

                local colors=( $( art-api.get_colors ) )
                
                local sequences=$( setters.sequences ${colors[@]} )

                printf "%b" "$sequences" > $focused_dev_pts &

                local blk="${colors[0]}"
                local gry="${colors[0]}"
                local red="${colors[0]}"
                local grn="${colors[0]}"
                local blu="${colors[0]}"
                local wht="${colors[0]}"
                
                # Update unfocused terminals
                sequences=$( setters.sequences "$blk" "$gry" "$red" "$grn" "$blu" "$wht" )

                lamp.update_terminals "$focused_dev_pts" "$sequences"
            ;;
            4 )
                # Black & white mode

                local colors=( $( art-api.get_colors ) )
                
                local sequences=$( setters.sequences ${colors[@]} )

                printf "%b" "$sequences" > $focused_dev_pts &

                # Generate unfosed colors
                local blk=$( lamp.mode4_unfocus_color "${colors[0]}" )
                local gry=$( lamp.mode4_unfocus_color "${colors[1]}" )
                local red=$( lamp.mode4_unfocus_color "${colors[2]}" )
                local grn=$( lamp.mode4_unfocus_color "${colors[3]}" )
                local blu=$( lamp.mode4_unfocus_color "${colors[4]}" )
                local wht=$( lamp.mode4_unfocus_color "${colors[5]}" )
                
                # Update unfocused terminals
                sequences=$( setters.sequences "$blk" "$gry" "$red" "$grn" "$blu" "$wht" )

                lamp.update_terminals "$focused_dev_pts" "$sequences"
            ;;
        esac
    fi
}

# ---
# LAUNCH
# ---

lamp.main
